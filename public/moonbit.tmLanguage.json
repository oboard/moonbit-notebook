{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "moonbit",
  "scopeName": "source.moonbit",
  "fileTypes": ["mbt"],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#attribute"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#types"
    },
    {
      "include": "#modules"
    },
    {
      "include": "#support"
    },
    {
      "include": "#pattern_matching"
    },
    {
      "include": "#generics"
    },
    {
      "include": "#variables"
    }
  ],
  "repository": {
    "support": {
      "patterns": [
        {
          "name": "support.class.moonbit",
          "match": "\\b(Eq|Compare|Hash|Show|Default|ToJson|FromJson)\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.moonbit",
          "match": "\\b(guard|if|while|break|continue|return|try|catch|except|raise|match|using|else|as|in|is|loop|for|async)\\b"
        },
        {
          "name": "keyword.declaration.moonbit",
          "match": "\\b(type!?|typealias|let|const|enum|struct|import|trait|traitalias|derive|test|impl|with|fnalias|recur|suberror|fn)\\b"
        },
        {
          "name": "variable.language.moonbit",
          "match": "\\b(self|Self)\\b"
        },
        {
          "name": "storage.modifier.moonbit",
          "match": "\\b(mut|pub|priv|readonly|extern|static)\\b"
        },
        {
          "name": "storage.type.function.arrow.moonbit",
          "match": "->|=>"
        },
        {
          "name": "keyword.operator.assignment.moonbit",
          "match": "(:=|=(?!=))"
        },
        {
          "name": "keyword.operator.pipe.moonbit",
          "match": "\\|>"
        },
        {
          "name": "keyword.operator.comparison.moonbit",
          "match": "(===|==|!=|>=|<=|(?<!-)(?<!\\|)>(?!>)|<(?!<))"
        },
        {
          "name": "keyword.operator.logical.moonbit",
          "match": "(\\bnot\\b|&&|\\|\\|)"
        },
        {
          "name": "keyword.operator.bitwise.moonbit",
          "match": "(\\|(?!\\|)(?!>)|&(?!&)|\\^|<<|>>)"
        },
        {
          "name": "keyword.operator.math.moonbit",
          "match": "(\\+|-(?!>)|\\*|%|/)"
        },
        {
          "name": "punctuation.separator.moonbit",
          "match": "[,;]"
        },
        {
          "name": "punctuation.brackets.moonbit",
          "match": "[\\[\\]{}()]"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line",
          "match": "//[^/].*"
        },
        {
          "name": "comment.block.documentation.moonbit",
          "begin": "///",
          "while": "///",
          "patterns": [
            {
              "begin": "\\s*```",
              "end": "\\s*```",
              "beginCaptures": {
                "0": { "name": "markup.fenced_code.block.markdown" }
              },
              "endCaptures": {
                "0": { "name": "markup.fenced_code.block.markdown" }
              },
              "patterns": [{ "include": "$self" }],
              "name": "meta.embedded.line.moonbit"
            },
            { "name": "comment.block.documentation.moonbit", "match": ".*" }
          ]
        }
      ]
    },
    "interpolation": {
      "patterns": [
        {
          "begin": "\\\\{",
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.embedded.begin.moonbit"
            }
          },
          "contentName": "source.moonbit",
          "end": "}",
          "endCaptures": {
            "0": {
              "name": "punctuation.section.embedded.end.moonbit"
            }
          },
          "patterns": [
            {
              "include": "$self"
            }
          ],
          "name": "meta.embedded.line.moonbit"
        }
      ]
    },
    "escape": {
      "patterns": [
        {
          "match": "\\\\[0\\\\tnrb\"']",
          "name": "constant.character.escape.moonbit"
        },
        {
          "name": "constant.character.escape.moonbit",
          "match": "\\\\x[0-9a-fA-F]{2}"
        },
        {
          "name": "constant.character.escape.moonbit",
          "match": "\\\\o[0-3][0-7]{2}"
        },
        {
          "match": "\\\\u[0-9a-fA-F]{4}",
          "name": "constant.character.escape.unicode.moonbit"
        },
        {
          "match": "\\\\u{[0-9a-fA-F]*}",
          "name": "constant.character.escape.unicode.moonbit"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.line",
          "match": "(#\\|).*",
          "captures": {
            "1": {
              "name": "keyword.operator.other.moonbit"
            }
          }
        },
        {
          "name": "string.line",
          "match": "(\\$\\|)(.*)",
          "captures": {
            "1": {
              "name": "keyword.operator.other.moonbit"
            },
            "2": {
              "patterns": [
                {
                  "include": "#escape"
                },
                {
                  "include": "#interpolation"
                }
              ]
            }
          }
        },
        {
          "name": "string.quoted.single.moonbit",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "include": "#escape"
            }
          ]
        },
        {
          "name": "string.quoted.double.moonbit",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "include": "#escape"
            },
            {
              "include": "#interpolation"
            }
          ]
        }
      ]
    },
    "attribute": {
      "patterns": [
        {
          "match": "(#[a-z][A-Za-z0-9_. ]*)(.*)",
          "captures": {
            "1": {
              "name": "keyword.control.directive"
            },
            "2": {
              "patterns": [
                {
                  "include": "#strings"
                },
                {
                  "name": "entity.name.tag",
                  "match": "[a-zA-Z0-9_. ]+"
                },
                {
                  "name": "keyword.operator.attribute.moonbit",
                  "match": "="
                }
              ]
            }
          }
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.boolean.moonbit",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "constant.language.null.moonbit",
          "match": "\\b(None|Some)\\b"
        },
        {
          "name": "constant.numeric.hex.moonbit",
          "match": "\\b0[Xx][\\da-fA-F][\\da-fA-F_]*((U|L|UL|N)\\b|\\.[\\da-fA-F_]*([Pp][+-]?[\\da-fA-F_]+\\b)?)?"
        },
        {
          "name": "constant.numeric.octal.moonbit",
          "match": "\\b0[Oo][0-7][0-7_]*((U)?(L)?|N?)\\b"
        },
        {
          "name": "constant.numeric.binary.moonbit",
          "match": "\\b0[Bb][01][01_]*((U)?(L)?|N?)\\b"
        },
        {
          "name": "constant.numeric.float.moonbit",
          "match": "\\b\\d[\\d_]*\\.[\\d_]*([Ee][+-]?\\d[\\d_]*)?[fF]?\\b"
        },
        {
          "name": "constant.numeric.integer.moonbit",
          "match": "\\b\\d[\\d_]*((U)?(L|LL)?|N?)\\b"
        },
        {
          "name": "constant.character.moonbit",
          "match": "'([^'\\\\]|\\\\.)*'"
        }
      ]
    },
    "modules": {
      "patterns": [
        {
          "name": "entity.name.namespace.moonbit",
          "match": "@[A-Za-z][A-Za-z0-9_/]*"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "comment": "variables",
          "name": "variable.other.moonbit",
          "match": "\\b(?<!\\.|::)[a-z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "comment": "generic type parameters",
          "name": "entity.name.type.parameter.moonbit",
          "match": "\\b[A-Z][A-Za-z0-9_]*(?=\\s*[,>]|\\s*$)"
        },
        {
          "comment": "optional types",
          "name": "entity.name.type.optional.moonbit",
          "match": "\\b[A-Z][A-Za-z0-9_]*\\?"
        },
        {
          "comment": "array and generic types",
          "name": "entity.name.type.moonbit",
          "match": "\\b[A-Z][A-Za-z0-9_]*(?:\\[[^\\]]*\\])?"
        },
        {
          "comment": "built-in types",
          "name": "support.type.primitive.moonbit",
          "match": "\\b(Int|Int64|Double|Float|Bool|Char|String|Unit|Array|Option|Result|Ref)\\b"
        },
        {
          "comment": "user-defined types",
          "name": "entity.name.type.moonbit",
          "match": "\\b(?<!@)[A-Z][A-Za-z0-9_]*\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "comment": "function definitions with type annotations",
          "match": "\\b(fn)\\s+(?:([A-Z][A-Za-z0-9_]*)::)?([a-z_][A-Za-z0-9_]*)?(?:\\s*\\[([A-Z][A-Za-z0-9_,\\s]*)\\])?\\s*\\(",
          "captures": {
            "1": {
              "name": "keyword.declaration.moonbit"
            },
            "2": {
              "name": "entity.name.type.moonbit"
            },
            "3": {
              "name": "entity.name.function.moonbit"
            },
            "4": {
              "name": "entity.name.type.parameter.moonbit"
            }
          }
        },
        {
          "comment": "method calls with dot notation",
          "match": "(?<=\\.)([a-z_][A-Za-z0-9_]*)(\\!|\\?)?(?=\\s*\\()",
          "captures": {
            "1": {
              "name": "entity.name.function.method.moonbit"
            },
            "2": {
              "name": "punctuation.definition.function.modifier.moonbit"
            }
          }
        },
        {
          "comment": "function calls",
          "match": "\\b([a-z_][A-Za-z0-9_]*)(\\!|\\?)?(?=\\s*\\()",
          "captures": {
            "1": {
              "name": "entity.name.function.moonbit"
            },
            "2": {
              "name": "punctuation.definition.function.modifier.moonbit"
            }
          }
        },
        {
          "comment": "static method calls",
          "match": "([A-Z][A-Za-z0-9_]*)::(\\w+)(?=\\s*\\()",
          "captures": {
            "1": {
              "name": "entity.name.type.moonbit"
            },
            "2": {
              "name": "entity.name.function.static.moonbit"
            }
          }
        }
      ]
    },
    "pattern_matching": {
      "patterns": [
        {
          "comment": "match expressions",
          "begin": "\\b(match)\\b",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.moonbit"
            }
          },
          "end": "(?<=})",
          "patterns": [
            {
              "match": "=>",
              "name": "keyword.operator.arrow.moonbit"
            },
            {
              "match": "\\|",
              "name": "keyword.operator.pattern.moonbit"
            },
            {
              "match": "_",
              "name": "variable.language.wildcard.moonbit"
            },
            {
              "include": "#constants"
            },
            {
              "include": "#types"
            },
            {
              "include": "#variables"
            }
          ]
        },
        {
          "comment": "destructuring patterns",
          "match": "\\b([A-Z][A-Za-z0-9_]*)\\s*\\(",
          "captures": {
            "1": {
              "name": "entity.name.type.constructor.moonbit"
            }
          }
        }
      ]
    },
    "generics": {
      "patterns": [
        {
          "comment": "generic type declarations",
          "begin": "<",
          "end": ">",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.generic.begin.moonbit"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.generic.end.moonbit"
            }
          },
          "patterns": [
            {
              "match": "\\b[A-Z][A-Za-z0-9_]*\\b",
              "name": "entity.name.type.parameter.moonbit"
            },
            {
              "match": ",",
              "name": "punctuation.separator.moonbit"
            },
            {
              "include": "#types"
            }
          ]
        }
      ]
    }
  }
}
